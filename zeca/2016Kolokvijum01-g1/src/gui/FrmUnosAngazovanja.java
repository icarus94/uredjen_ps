/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import domen.Angazovanje;
import domen.Gradiliste;
import domen.Radnik;
import exception.ValidacijaException;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import kontroler.Kontroler;
import model.ModelTabeleAngazovanje;
/**
 *
 * @author Zeljko
 */
public class FrmUnosAngazovanja extends javax.swing.JFrame {
    
    /**
     * Creates new form FrmUnosAngazovanja
     */
    public FrmUnosAngazovanja() {
        try {
            
            initComponents();
            popuniCBGradiliste();
            popuniCBRadnik();
            //popuniTabeluAngazovanja();
            srediFormu();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "Greska prilikom ucitavanja gradilista i radnika!");
            Logger.getLogger(FrmUnosAngazovanja.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        txtBrojSati = new javax.swing.JTextField();
        cbRadnik = new javax.swing.JComboBox<>();
        cbGradiliste = new javax.swing.JComboBox<>();
        btnDodajAng = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAngazovanja = new javax.swing.JTable();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Unos angazovanja");
        setResizable(false);

        jLabel1.setText("Gradilište:");

        jLabel2.setText("Radnik:");

        jLabel3.setText("Broj sati:");

        jLabel4.setText("Datum (dd.MM.yyyy):");

        cbGradiliste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGradilisteActionPerformed(evt);
            }
        });

        btnDodajAng.setText("Dodaj angažovanje");
        btnDodajAng.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajAngActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši angažovanje");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        tblAngazovanja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblAngazovanja);

        btnSacuvaj.setText("Sačuvaj angažovanja");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDatum)
                            .addComponent(txtBrojSati)
                            .addComponent(cbRadnik, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbGradiliste, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDodajAng)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnObrisi))
                            .addComponent(btnSacuvaj))
                        .addGap(0, 124, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbGradiliste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBrojSati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajAng)
                    .addComponent(btnObrisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSacuvaj)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbGradilisteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGradilisteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbGradilisteActionPerformed

    private void btnDodajAngActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajAngActionPerformed
       Gradiliste gr = (Gradiliste) cbGradiliste.getSelectedItem();
       Radnik r = (Radnik) cbRadnik.getSelectedItem();
       String brojSati = txtBrojSati.getText();
       String datum = txtDatum.getText();
        try {
            Angazovanje ang = kreirajAngazovanje(brojSati, datum, gr, r);
            ModelTabeleAngazovanje mta = (ModelTabeleAngazovanje) tblAngazovanja.getModel();
            mta.dodajAngazovanje(ang);
            ocistiPolja();
        } catch (ValidacijaException ex) {
            JOptionPane.showMessageDialog(this,ex.getMessage(),"Greska!",JOptionPane.WARNING_MESSAGE);
            //ocistiPolja();
            //Logger.getLogger(FrmUnosAngazovanja.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDodajAngActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int red = tblAngazovanja.getSelectedRow();
        if(red == -1){
            JOptionPane.showMessageDialog(rootPane, "Izaberite angazovanje koje zelite da obrisete", "Upozorenje", JOptionPane.WARNING_MESSAGE);
        }else{
            ModelTabeleAngazovanje mta = (ModelTabeleAngazovanje) tblAngazovanja.getModel();
            mta.obrisiAngazovanje(red);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        ModelTabeleAngazovanje mta = (ModelTabeleAngazovanje) tblAngazovanja.getModel();
        List<Angazovanje> lista = mta.getAngazovanja();
        boolean uspesno = Kontroler.vratiInstancu().sacuvajAngazovanja(lista);
        
        if(uspesno){
            JOptionPane.showMessageDialog(rootPane, "Angazovanja uspesno sacuvana!");
            ocistiPolja();
            srediFormu();
        }else{
            JOptionPane.showMessageDialog(rootPane, "Doslo je do greske prilikom cuvanja angazovanja!");
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUnosAngazovanja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUnosAngazovanja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodajAng;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox<Gradiliste> cbGradiliste;
    private javax.swing.JComboBox<Radnik> cbRadnik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAngazovanja;
    private javax.swing.JTextField txtBrojSati;
    private javax.swing.JTextField txtDatum;
    // End of variables declaration//GEN-END:variables

    private void popuniCBRadnik() throws SQLException {
        List<Radnik> radnici = Kontroler.vratiInstancu().vratiSveRadnike();
        for (Radnik radnik: radnici) {
            cbRadnik.addItem(radnik);
        }
    }

    private void popuniCBGradiliste() throws SQLException {
        List<Gradiliste> gradilista = Kontroler.vratiInstancu().vratiSvaGradilista();
        for (Gradiliste gradiliste : gradilista) {
            cbGradiliste.addItem(gradiliste);
        }
    }

    private void popuniTabeluAngazovanja() throws SQLException {
        List<Angazovanje> ang = Kontroler.vratiInstancu().vratiAngazovanja();
        TableModel tm = new ModelTabeleAngazovanje(ang);
        tblAngazovanja.setModel(tm);
    }

    private Angazovanje kreirajAngazovanje(String brojSati, String dat, Gradiliste gr, Radnik r) throws ValidacijaException {
        //provera da nisu polja prazna
        if(brojSati.isEmpty() || dat.isEmpty()){
            throw new ValidacijaException("Sva polja su obavezna!");
        }
        //provera da li je uneo broj
        int sati;
        try {
            sati = Integer.parseInt(brojSati);
        } catch (Exception e) {
            throw new ValidacijaException("Za polje broj sati morate uneti ceo broj!");
        }
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
//        sdf.setLenient(false);
        Date datum = null;
        try {
            datum = sdf.parse(dat);
            
        } catch (ParseException e) {
            throw new ValidacijaException("Unesite datum u formatu 'dd.MM.yyyy'");
        }
        if(!sdf.format(datum).equals(dat))
            throw new ValidacijaException("Unesite datum u formatu 'dd.MM.yyyy'");
        
        return new Angazovanje(-1,sati,datum,gr,r); 
    }

    private void srediFormu() {
        ModelTabeleAngazovanje mta = new ModelTabeleAngazovanje();
        tblAngazovanja.setModel(mta);
    }

    private void ocistiPolja() {
        txtBrojSati.setText("");
        txtDatum.setText("");
        cbRadnik.setSelectedIndex(0);
        cbGradiliste.setSelectedIndex(0);
    }

    
}
