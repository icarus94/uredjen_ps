/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Lokacija;
import domen.Radnik;
import domen.Raspored;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import logika.Kontroler;
import modeliTabele.ModelTabeleRasporedi;

/**
 *
 * @author Miroslav
 */
public class GlavnaForma extends javax.swing.JFrame {

    /**
     * Creates new form GlavnaForma
     */
    public GlavnaForma() {
        initComponents();
        ucitajLokacijeIPopuniKombo();
        ucitajRadnike();
        srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbRadnik = new javax.swing.JComboBox();
        cmbLokacija = new javax.swing.JComboBox();
        txtBrSati = new javax.swing.JTextField();
        txtDatum = new javax.swing.JTextField();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaRasporeda = new javax.swing.JTable();
        btnSacuvaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Radnik");

        jLabel2.setText("Lokacija");

        jLabel3.setText("brojSati");

        jLabel4.setText("Datum(dd.MM.yyyy)");

        cmbRadnik.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbLokacija.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnDodaj.setText("Dodaj raspored");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi raspored");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        tabelaRasporeda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaRasporeda);

        btnSacuvaj.setText("Sacuvaj sveeee");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtBrSati, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbLokacija, javax.swing.GroupLayout.Alignment.LEADING, 0, 420, Short.MAX_VALUE)
                            .addComponent(cmbRadnik, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtDatum)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodaj)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisi))
                    .addComponent(btnSacuvaj)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbLokacija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBrSati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSacuvaj)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        Radnik r = (Radnik) cmbRadnik.getSelectedItem();
        Lokacija l = (Lokacija) cmbLokacija.getSelectedItem();
        
        String brS = txtBrSati.getText().trim();
        String dat = txtDatum.getText().trim();
        
        if(brS.isEmpty() || dat.isEmpty()){
            JOptionPane.showMessageDialog(this, "Unesi sva polja");
            return;
        }
        
        int brojSati = 0;
        
        try {
            brojSati = Integer.parseInt(brS);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Mora biti broj");
            return;
        }
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        
        Date datum = null;
        
        try {
            datum = sdf.parse(dat);
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Format datuma mora biti dd.MM.yyyy");
            return;
        }
        
        Raspored raspored = new Raspored(-1, brojSati, datum, l, r);
        
        ModelTabeleRasporedi mtr = (ModelTabeleRasporedi) tabelaRasporeda.getModel();
        
        mtr.dodaj(raspored);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
       int red = tabelaRasporeda.getSelectedRow();
       
       if(red == -1){
           JOptionPane.showMessageDialog(this, "Niste izabrali red");
       }else{
           ModelTabeleRasporedi mtr = (ModelTabeleRasporedi) tabelaRasporeda.getModel();
           
           mtr.obrisi(red);
       }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        
        ModelTabeleRasporedi mtr = (ModelTabeleRasporedi) tabelaRasporeda.getModel();
        ArrayList<Raspored> lista = mtr.getListaRasporeda();
        
        //validacij
        
        for (Raspored r : lista) {
            if(r.getDatum().before(r.getLokacija().getPocetakGradnje()) || r.getDatum().after(r.getLokacija().getZavrsetakGradnje())){
                JOptionPane.showMessageDialog(this, "Ne moze, datumi nisu dobri");
                return;
            }
        }
        
        ArrayList<Radnik> listaRadnika = Kontroler.getInstanca().vratiRadnike();
        
//        for (Radnik radnik : listaRadnika) {
//            int ukupnoSati = 0;
//            for (Raspored ras : lista) {
//                if(radnik.getRadnikID() == ras.getRadnik().getRadnikID()){
//                    ukupnoSati += ras.getBrojSati();
//                }
//            }
//            
//            if(ukupnoSati>8){
//                JOptionPane.showMessageDialog(this, "Ne moze, preko 8 sati, "+radnik+" radi kao crnac");
//                return;
//            }
//        }
        SimpleDateFormat sdf = new SimpleDateFormat("dd.MM.yyyy");
        for (int i = 0; i < lista.size(); i++) {
            Raspored r1 = lista.get(i);
            String dat1 = sdf.format(r1.getDatum());
            int ukupnoSati = r1.getBrojSati();
            for (int j = i+1; j < lista.size(); j++) {
               Raspored r2 = lista.get(j);
               String dat2 = sdf.format(r2.getDatum());
               if(r1.getRadnik().getRadnikID() == r2.getRadnik().getRadnikID() && dat1.equals(dat2)){
                    ukupnoSati += r2.getBrojSati();
                }
                
            }
            if(ukupnoSati>8){
               JOptionPane.showMessageDialog(this, "Ne moze, preko 8 sati, "+r1.getRadnik()+" radi kao crnac");
                return;
            }
        }
        
        boolean sacuvano = Kontroler.getInstanca().sacuvaj(lista);
        
        if (sacuvano) {
            JOptionPane.showMessageDialog(this, "Sve sacuvano kako treba, Jeeeej");
        }else{
            JOptionPane.showMessageDialog(this, "Nije dobro");
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GlavnaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GlavnaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GlavnaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GlavnaForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GlavnaForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JComboBox cmbLokacija;
    private javax.swing.JComboBox cmbRadnik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelaRasporeda;
    private javax.swing.JTextField txtBrSati;
    private javax.swing.JTextField txtDatum;
    // End of variables declaration//GEN-END:variables

    private void ucitajLokacijeIPopuniKombo() {

        ArrayList<Lokacija> listaLokacija = Kontroler.getInstanca().vratiLokacije();
        
        cmbLokacija.removeAllItems();
        
        for (Lokacija l : listaLokacija) {
            cmbLokacija.addItem(l);
        }

    }

    private void ucitajRadnike() {
        ArrayList<Radnik> lista = Kontroler.getInstanca().vratiRadnike();
        
        cmbRadnik.removeAllItems();
        
        for (Radnik radnik : lista) {
            cmbRadnik.addItem(radnik);
        }
    }

    private void srediTabelu() {
        ModelTabeleRasporedi mtr = new ModelTabeleRasporedi();
        tabelaRasporeda.setModel(mtr);
        
        JComboBox komboLok = new JComboBox();
        JComboBox komboRad = new JComboBox();
        
        komboLok.removeAllItems();
        komboRad.removeAllItems();
        
        ArrayList<Radnik> listaRad = Kontroler.getInstanca().vratiRadnike();
        
        for (Radnik r : listaRad) {
            komboRad.addItem(r);
        }
        
        ArrayList<Lokacija> listaLok = Kontroler.getInstanca().vratiLokacije();
        
        for (Lokacija l : listaLok) {
            komboLok.addItem(l);
        }
        
        TableColumnModel tcm = tabelaRasporeda.getColumnModel();
        
        TableColumn kolonaLok = tcm.getColumn(0);
        TableColumn kolonaRad = tcm.getColumn(1);
        
        kolonaLok.setCellEditor(new DefaultCellEditor(komboLok));
        kolonaRad.setCellEditor(new DefaultCellEditor(komboRad));
    }
}
